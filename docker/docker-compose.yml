version: "3"
services:
  api:
    container_name: "${APP_NAME}_api"
    image: node:14.15.5

    # (In production mode) after running "npm start" which uses PM2, PM2 takes over and
    # this container (has nothing doing and) exits with code 0 (zero)
    # This causes issues when our client service tries to make requests to our API/backend.
    # The "tail -F /dev/null" command makes sure this container does not exit.
    # Credits: https://stackoverflow.com/a/45450456/1743192
    command: [bash, -c, "npm install --only=production && npm run prisma:generate && npm start && tail -F /dev/null"]
    restart: always
    working_dir: /usr/src/app/api/
    volumes:
      - ../api:/usr/src/app/api/
    networks:
      - web
    ports:
      - ${API_PRISMA_STUDIO_PORT}:5555
    environment:
      APP_NAME: "${APP_NAME}"
      APP_HOST: "${API_APP_HOST}"
      #we don't set APP_PORT since the server automatically uses 443 when HTTPS enabled
      ENABLE_HTTPS: 1
      NODE_ENV: "production"
      SESSION_EXPIRY: "${API_SESSION_EXPIRY}"
      SESSION_SECRET: "${API_SESSION_SECRET}"
      BCRYPT_SALT_ROUNDS: "${API_BCRYPT_SALT_ROUNDS}"
      REMEMBER_ME_DAYS: ${API_REMEMBER_ME_DAYS}"
      ALLOWED_ORIGINS: "${API_ALLOWED_ORIGINS}"
      DATABASE_URL: "${API_DATABASE_URL}"
      REDIS_HOST: "${API_REDIS_HOST}"
      REDIS_PORT: "${API_REDIS_PORT}"
      DEFAULT_CARDS_PER_PAGE: "${API_DEFAULT_CARDS_PER_PAGE}"
      DEFAULT_USERS_PER_PAGE: "${API_DEFAULT_USERS_PER_PAGE}"
      DEFAULT_CATEGORIES_PER_PAGE: "${API_DEFAULT_CATEGORIES_PER_PAGE}"
      DEFAULT_COLLECTIONS_PER_PAGE: "${API_DEFAULT_COLLECTIONS_PER_PAGE}"
      PRISMA_STUDIO_PORT: "${API_PRISMA_STUDIO_PORT}"

    # "Wait" for the mongodb server to be ready to accept connections
    # https://docs.docker.com/compose/compose-file/#healthcheck
    # https://stackoverflow.com/q/54384042/1743192
    #healthcheck:
      #test: echo 'db.runCommand("ping").ok' | mongo "${API_DATABASE_URL}" --quiet 1
      #interval: 60s
      #timeout: 30s
      #retries: 10
  client:
    container_name: "${APP_NAME}_client"
    image: node:14.15.5

    # (In production mode) after creating our build,
    # this container has nothing doing and exits with code 0 (zero)
    # This causes our nginx service, which depends on this service, not to start.
    # The "tail -F /dev/null" command makes sure this container does not exit.
    # Credits: https://stackoverflow.com/a/45450456/1743192
    command: [bash, -c, "yarn install && yarn build && tail -F /dev/null"]
    restart: always
    working_dir: /usr/src/app/client/
    volumes:
      - ../frontend:/usr/src/app/client/
    networks:
      - web
    depends_on:
      - api
    environment:
      APP_NAME: "${APP_NAME}"
      # We don't set APP_PORT because it is automaticlally 80
      # since every request comes via the nginx server/container
      API_URL: "https://${API_APP_HOST}:${API_APP_PORT}/graphql"
      GOOGLE_ANALYTICS_TRACKING_ID: "${CLIENT_GOOGLE_ANALYTICS_TRACKING_ID}"
      CARDS_PER_PAGE: "${CLIENT_CARDS_PER_PAGE}"
      USERS_PER_PAGE: "${CLIENT_USERS_PER_PAGE}"
      CATEGORIES_PER_PAGE: "${CLIENT_CATEGORIES_PER_PAGE}"
      COLLECTIONS_PER_PAGE: "${CLIENT_COLLECTIONS_PER_PAGE}"
      CURRENT_USER_POLL_INTERVAL: "${CLIENT_CURRENT_USER_POLL_INTERVAL}"
  nginx:
    container_name: "${APP_NAME}_nginx"
    restart: always
    image: nginx:1.17.9
    depends_on:
      - client
    ports:
      # Every request comes into the nginx server, via ports: 80, 443, 0r 3000,
      # which routes them (using the default.conf file) as follows:
      # - 80 -> 443
      # - 443 -> (serves the application frontend from /usr/shar/nginx/html/index.html)
      # - 3000 -> https://api:443 (serves the application backend/api)
      #
      - "${CLIENT_APP_PORT}:80"
      - "443:443"
      - "${API_APP_PORT}:3000"
    volumes:
      - ./ssl/keys/:/etc/letsencrypt/
      - ../frontend/build/:/usr/share/nginx/html/
      - ./conf/nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - web
    #environment:
      #https://stackoverflow.com/a/57891894/1743192 :
      #  - FORWARD_HOST: "${APP_NAME}_client"
      #command: bash -c "envsubst < /etc/nginx/conf.d/mysite.template > /etc/nginx/conf.d/default.conf && exec nginx -g 'daemon off;'"

networks:
  web:
