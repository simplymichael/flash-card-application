server {
   listen 80;
   listen [::]:80;
   resolver 127.0.0.11 ipv6=off;

   location / {
     proxy_set_header Host $host;
     proxy_set_header X-Real-IP $remote_addr;
     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
     proxy_set_header X-Forwarded-Proto $scheme;
     proxy_pass http://client:8080;
   }

   # Forward request to other paths also to the client
   # # credits:
   # - https://stackoverflow.com/a/46083709/1743192
   # - https://stackoverflow.com/a/42574232/1743192
   # - https://stackoverflow.com/a/51415422/1743192
   # - https://stackoverflow.com/a/37656784/1743192
   # - https://dev.to/danielkun/nginx-everything-about-proxypass-2ona
   location ~ ^/(.*)$ {
     proxy_set_header Host $host;
     proxy_set_header X-Real-IP $remote_addr;
     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
     proxy_set_header X-Forwarded-Proto $scheme;

     # Use a variable so that localhost:8080 might be down while nginx starts:
     set $upstream http://client:8080;

     # Put together the upstream request path
     # using the captured component after the location path,
     # and the query parameters:
     proxy_pass $upstream/$1$is_args$args;
   #}
}
